# ──────────────────────────────────────────────────────────────────────────── #

#                             .tmux.conf of wayanLW                            #
# set is an alias for set-option and setw is for set-window-option
# ──────────────────────────────────────────────────────────────────────────── #

## Unbind current and  Change prefix key to alt-f, easier to type, same to "screen"
unbind C-b
set -g prefix M-f

set -g status-keys vi
setw -g mode-keys vi     # set copy mode keybindings to vim
set -g history-limit 10000

## starts naming the windows and panes from 0
set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows
set -g default-terminal screen-256color

## make the default shell, the tmux shell
set -g default-shell $SHELL

## Set parent terminal title to reflect current window in tmux session
set -g set-titles on
set -g set-titles-string "#I:#W"
setw -g automatic-rename on     ## Automatically set window title

## No delay for escape key press
set -sg escape-time 0

## Swapping windows
bind -n M-S-Left swap-window -t -1
bind -n M-S-Right swap-window -t +1

# Saving history to a file name
bind-key P command-prompt -p 'save history to filename:' -I '~/tmux.history' 'capture-pane -S - ; save-buffer %1 ; delete-buffer'
##-----------------------------------------------------------------------------------------
## Edit configuration and reload
bind M-e new-window -n 'tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"Config reloaded\"'"
## Reload tmux configuration
bind M-r source-file ~/.tmux.conf \; display "Config reloaded"

## trigger copy mode by
#bind -n M-Up copy-mode

## Switch to last window
# -r = repeatable. Eg. bind -r t new-window Ctrl + b t is needed to open a first new window, then you can keep hitting t to open more without having to hit Ctrl + b each time. The repeat-time setting decides how much time you have to repeat the key before the prefix times out (default: 500 milliseconds).
bind -r Tab last-window   # cycle thru MRU tabs

set -g mouse on
setw -g monitor-activity on
setw -g visual-activity on

unbind %    # split-window -h
unbind '"'  # split-window

bind-key ] split-window -h
bind-key - split-window -v
bind-key \\ split-window -h -c "#{pane_current_path}"
bind-key _ split-window -v -c "#{pane_current_path}"
#unbind v
#unbind h
#bind-key h split-window -h
#bind-key v split-window -v


## Vim style pane selection
#bind h select-pane -L
#bind j select-pane -D
#bind k select-pane -U
#bind l select-pane -R

## Use Alt-vim keys without prefix key to switch panes
## to use without the bind key, use bind -n M-j select-pane -L
bind -n M-j select-pane -L
bind -n M-k select-pane -D
bind -n M-i select-pane -U
bind -n M-l select-pane -R
#
## Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D
#
## Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

## Move windows before and after
bind-key -r < swap-window -t -1\; select-window -t -1
bind-key -r > swap-window -t +1\; select-window -t +1

## Join panes
# pane movement
bind-key j command-prompt -p "join pane from:"  "join-pane -s :'%%' -h"
bind-key s command-prompt -p "send pane to:"  "join-pane -t :'%%' -h"

## new window and retain cwd
bind c new-window -c "#{pane_current_path}"

## Kill pane/window/session shortcuts
bind x kill-pane
bind X kill-window
bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session

## Changing the keystroke to select text from space to v.  Changing the keystroke to copy text from enter to y.
unbind -T copy-mode-vi Space; #Default for begin-selection
unbind -T copy-mode-vi Enter; #Default for copy-selection

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel --clipboard"

# ──────────────────────────────────────────────────────────────────────────── #
#                                     THEME                                    #
# ──────────────────────────────────────────────────────────────────────────── #

## Feel free to NOT use this variables at all (remove, rename)
## this are named colors, just for convenience
color_orange="colour166" # 208, 166
color_purple="colour134" # 135, 134
color_green="colour076" # 070
color_blue="colour39"
color_yellow="colour220"
color_red="colour160"
color_black="colour232"
color_white="white" # 015

## This is a theme CONTRACT, you are required to define variables below
## Change values, but not remove/rename variables itself
color_dark="$color_black"
color_light="$color_white"
color_session_text="$color_blue"
color_status_text="colour245"
color_main="$color_orange"
color_secondary="$color_purple"
color_level_ok="$color_green"
color_level_warn="$color_yellow"
color_level_stress="$color_red"
color_window_off_indicator="colour088"
color_window_off_status_bg="colour238"
color_window_off_status_current_bg="colour254"

# ──────────────────────────────────────────────────────────────────────────── #
#                           Appearence and status bar                          #
# ──────────────────────────────────────────────────────────────────────────── #

set -g mode-style "fg=default,bg=$color_main"

## command line style
set -g message-style "fg=$color_main,bg=$color_dark"

## status line style
set -g status-style "fg=$color_status_text,bg=$color_dark"

## window segments in status line
set -g window-status-separator ""
separator_powerline_left=""
separator_powerline_right=""

## setw -g window-status-style "fg=$color_status_text,bg=$color_dark"
setw -g window-status-format " #I:#W "
setw -g window-status-current-style "fg=$color_light,bold,bg=$color_main"
setw -g window-status-current-format "#[fg=$color_dark,bg=$color_main]$separator_powerline_right#[default] #I:#W# #[fg=$color_main,bg=$color_dark]$separator_powerline_right#[default]"

## when window has monitoring notification
setw -g window-status-activity-style "fg=$color_main"

## outline for active pane
setw -g pane-active-border-style "fg=$color_main"

## general status bar settings
set -g status on
set -g status-interval 5
set -g status-position bottom
set -g status-justify left
set -g status-right-length 100

